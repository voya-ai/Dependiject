///
/// @Generated by Mockolo
///



import Combine
import Foundation
import SwiftUI


public class AnyObservableObjectMock: AnyObservableObject {
    public init() { }
    public init(objectWillChange: ObservableObjectPublisher) {
        self._objectWillChange = objectWillChange
    }


    public private(set) var objectWillChangeSetCallCount = 0
    private var _objectWillChange: ObservableObjectPublisher!  { didSet { objectWillChangeSetCallCount += 1 } }
    public var objectWillChange: ObservableObjectPublisher {
        get { return _objectWillChange }
        set { _objectWillChange = newValue }
    }
}

